@model RentoBuddy.Models.CartViewModels.CartViewModel

<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

@{
Layout = "~/Views/Shared/_Layout.cshtml";
}


@{
ViewData["Title"] = "Cart";
}

<h2>Cart</h2>

<!-- Cart -->
<div class="wrap-header-cart js-panel-cart">
<div class="s-full js-hide-cart"></div>

<div class="header-cart flex-col-l p-l-65 p-r-25">
<div class="header-cart-title flex-w flex-sb-m p-b-8">
    <span class="mtext-103 cl2">
        Your Cart
    </span>

    <div class="fs-35 lh-10 cl2 p-lr-5 pointer hov-cl1 trans-04 js-hide-cart">
        <i class="zmdi zmdi-close"></i>
    </div>
</div>

<div class="header-cart-content flex-w js-pscroll">
    <ul class="header-cart-wrapitem w-full">
        @if (Model != null && Model.ProductsInCart != null && Model.ProductsInCart.Count > 0)
        {
            @foreach (var cartProduct in Model.ProductsInCart)
            {
                <li class="header-cart-item flex-w flex-t m-b-12">
                    <div class="header-cart-item-img">
                        <img src="images/item-cart-01.jpg" alt="IMG">
                    </div>

                    <div class="header-cart-item-txt p-t-8">
                        <a href="#" class="header-cart-item-name m-b-18 hov-cl1 trans-04">
                            @if (cartProduct.ProductData != null)
                            {
                                @cartProduct.ProductData[0].ProductName;
                            }
                        </a>

                        <span class="header-cart-item-info">
                            1 x $19.00
                            @cartProduct.Quantity X $@cartProduct.RentalDeposit
                        </span>
                    </div>
                </li>
            }
        }


        <li class="header-cart-item flex-w flex-t m-b-12">
            <div class="header-cart-item-img">
                <img src="images/item-cart-02.jpg" alt="IMG">
            </div>

            <div class="header-cart-item-txt p-t-8">
                <a href="#" class="header-cart-item-name m-b-18 hov-cl1 trans-04">
                    Converse All Star
                </a>

                <span class="header-cart-item-info">
                    1 x $39.00
                </span>
            </div>
        </li>

        <li class="header-cart-item flex-w flex-t m-b-12">
            <div class="header-cart-item-img">
                <img src="images/item-cart-03.jpg" alt="IMG">
            </div>

            <div class="header-cart-item-txt p-t-8">
                <a href="#" class="header-cart-item-name m-b-18 hov-cl1 trans-04">
                    Nixon Porter Leather
                </a>

                <span class="header-cart-item-info">
                    1 x $17.00
                </span>
            </div>
        </li>
    </ul>

    <div class="w-full">
        <div class="header-cart-total w-full p-tb-40">
            Total: $75.00
        </div>

        <div class="header-cart-buttons flex-w w-full">
            <a href="shoping-cart.html" class="flex-c-m stext-101 cl0 size-107 bg3 bor2 hov-btn3 p-lr-15 trans-04 m-r-8 m-b-10">
                View Cart
            </a>

            <a href="shoping-cart.html" class="flex-c-m stext-101 cl0 size-107 bg3 bor2 hov-btn3 p-lr-15 trans-04 m-b-10">
                Check Out
            </a>
        </div>
    </div>
</div>
</div>
</div>


<!-- breadcrumb -->
<div class="container">
<div class="bread-crumb flex-w p-l-25 p-r-15 p-t-30 p-lr-0-lg">
<a href="index.html" class="stext-109 cl8 hov-cl1 trans-04">
    Home
    <i class="fa fa-angle-right m-l-9 m-r-10" aria-hidden="true"></i>
</a>

<span class="stext-109 cl4">
    Shopping Cart
</span>
</div>
</div>


<!-- Shoping Cart -->
@using (Html.BeginForm("MakePayment", "Order", FormMethod.Post,
new { @id = "addToCart", @name = "addToCart", @class = "bg0 p-t-75 p-b-85", ng_app = "ngApp" }))
{
@Html.AntiForgeryToken()
@Html.ValidationSummary()
<div class="container">
    <div class="row">
        <div class="col-xl-12 m-lr-auto m-b-50">
            <div class="m-l-25 m-r--38 m-lr-0-xl">
                <div class="wrap-table-shopping-cart">
                    <table class="table-shopping-cart">
                        <tr class="table_head">
                            <th class="column-1">Product</th>
                            <th class="column-2"></th>
                            <th class="column-3">Rent/Month(in dollars)</th>
                            <th class="column-4">Quantity</th>
                            <th class="column-5">Total</th>
                        </tr>

                        @for (var i = 0; i < Model.ProductsInCart.Count; i++)
                        {
                    @Html.HiddenFor(m => m.ProductsInCart[i].RentalDurationInMonths)
                    <tr class="table_row">
                        <td class="column-1">
                            <div class="how-itemcart1">
                                <img src=@Model.ProductsInCart[i].ProductData[0].ProductImageLink alt="IMG">
                            </div>
                        </td>
                        <td class="column-2">@Model.ProductsInCart[i].ProductData[0].ProductName (Duration: @Model.ProductsInCart[i].RentalDurationInMonths months)</td>
                        <td class="column-3" id="rentPerMonth">@(Model.ProductsInCart[i].ProductData[0].RentPerMonth)</td>
                        <td class="column-4">
                            <div class="wrap-num-product flex-w m-l-auto m-r-0">
                                <div class="btn-num-product-down cl8 hov-btn3 trans-04 flex-c-m"
                                     onclick="onQtyChangedDown();">
                                    <i class="fs-16 zmdi zmdi-minus"></i>
                                </div>

                                @Html.EditorFor(m => m.ProductsInCart[i].Quantity,

new
{
    htmlAttributes = new
    {
        @type = "number",
        //@value = @Model.ProductsInCart[i].Quantity,
        @class = "mtext-104 cl3 txt-center num-product",
        @name = "num-product1",
        @id = "num-product1"
    }
})

                                @*<input class="mtext-104 cl3 txt-center num-product" type="number" name="num-product1"
                value=@cartProduct.Quantity>*@

                                <div name="btn-num-up" id="btn-num-up"
                                     class="btn-num-product-up cl8 hov-btn3 trans-04 flex-c-m"
                                     onclick="onQtyChangedUp();">
                                    <i class="fs-16 zmdi zmdi-plus"></i>
                                </div>
                            </div>
                        </td>
                        <td class="column-5" id="perProductTotal" class="prodTotalClass">@(Model.ProductsInCart[i].ProductData[0].RentPerMonth * Model.ProductsInCart[i].RentalDurationInMonths * Model.ProductsInCart[i].Quantity)</td>
                    </tr>


}

                    <tr class="table_head">
                        <th class="column-1"></th>
                        <th class="column-2"></th>
                        <th class="column-3"></th>
                        <th class="column-4">Sub Total</th>
                        @{ var subtotal = 0.0;
                        @foreach (var product in Model.ProductsInCart)
                        {

                            subtotal = subtotal + (product.ProductData[0].RentPerMonth
                                            * product.Quantity * product.RentalDurationInMonths);
                        }
                        <th class="column-5" id="subtotalCart" name ="subtotalCart">@subtotal</th>
                        
                            }

                    </tr>

                    <tr class="table_head">
                        <th class="column-1"></th>
                        <th class="column-2"></th>
                        <th class="column-3"></th>
                        <th class="column-4">Rental Deposit</th>

                        @{
                            var totalRentalAmt4 = 0.0;
                            var totalRentalDeposit = 0.0;
                        @foreach (var product in Model.ProductsInCart)
                        {
                            totalRentalAmt4 = totalRentalAmt4 + (product.ProductData[0].RentPerMonth
                                    * product.Quantity * product.RentalDurationInMonths);
                            totalRentalDeposit = 0.10 * totalRentalAmt4;
                        }
                        <th class="column-5" id="rentalDepositCart" name ="rentalDepositCart">@totalRentalDeposit</th>
                        
                        }
                    </tr>

                    <tr class="table_head">
                        <th class="column-1"></th>
                        <th class="column-2"></th>
                        <th class="column-3"></th>
                        <th class="column-4">Discount Applied</th>
                        @{var discountApplied = 0.0;
                        @foreach (var product in Model.ProductsInCart)
                        {

                            discountApplied = discountApplied + product.RentAmount;
                        }
                    <th class="column-5" id="discountCart" name ="discountCart">@discountApplied</th>
                        
                            }
                    </tr>

                    <tr class="table_head">
                        <th class="column-1"></th>
                        <th class="column-2"></th>
                        <th class="column-3"></th>
                        <th class="column-4">Taxes Applied</th>
                        @{ var taxesApplied = 0.0;
                            var totalRentalAmt = 0.0;

                        @foreach (var product in Model.ProductsInCart)
                        {

                            totalRentalAmt = totalRentalAmt + (product.ProductData[0].RentPerMonth
                                                                    * product.Quantity * product.RentalDurationInMonths);
                            taxesApplied = 0.05 * totalRentalAmt;
                        }
                    <th class="column-5" id="taxesAppliedCart" name ="taxesAppliedCart">@taxesApplied</th>
                        
                            }
                    </tr>

                    <tr class="table_head">
                        <th class="column-1"></th>
                        <th class="column-2"></th>
                        <th class="column-3"></th>
                        <th class="column-4">Total</th>
                        @{ 
                            var total = 0.0;
                            var taxesApplied2 = 0.0;
                            var totalRentalAmt2 = 0.0;
                            var discountApplied2 = 0.0;
                            var rentalDeposit2 = 0.0;
                            var rentalAmt2 = 0.0;
                            var totalRentalDep2 = 0.0;
                        @foreach (var product in Model.ProductsInCart)
                        {

                            totalRentalAmt2 = totalRentalAmt2 + (product.ProductData[0].RentPerMonth
                                                                    * product.Quantity * product.RentalDurationInMonths);
                            taxesApplied2 = 0.05 * totalRentalAmt2;
                            totalRentalDep2 = 0.10 * totalRentalAmt2;
                            total = (taxesApplied2 + totalRentalAmt2 + totalRentalDep2) - discountApplied2;
                        }
                    <th class="column-5" id="Total" name="Total">@total</th>
                        
                            }
                    </tr>
                    </table>
                </div>

               
                <div class="flex-w flex-sb-m bor15 p-t-18 p-b-15 p-lr-40 p-lr-15-sm">
                    <div class="flex-w flex-m m-r-20 m-tb-5">
                        <input class="stext-104 cl2 plh4 size-117 bor13 p-lr-20 m-r-10 m-tb-5" type="text" id="coupon" name="coupon" placeholder="Coupon Code">

                        <div class="flex-c-m stext-101 cl2 size-118 bg8 bor13 hov-btn3 p-lr-15 trans-04 pointer m-tb-5" onclick ="onCouponApplied();">
                            Apply coupon
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-12 m-lr-auto m-b-50" ng-controller="ValidationController">
            <div class="bor10 p-lr-40 p-t-30 p-b-40 m-l-63 m-r-40 m-lr-0-xl p-lr-15-sm">
                <h4 class="mtext-109 cl2 p-b-30">
                    Customer Details
                </h4>

                <div class="flex-w flex-t bor12 p-t-15 p-b-30">
                    <div class="size-208 w-full-ssm">
                        <span class="stext-110 cl2">
                            Name Details:
                        </span>
                    </div>

                    <div class="size-209 p-r-18 p-r-0-sm w-full-ssm">
                        <p class="stext-111 cl6 p-t-2">
                            Please enter all the fields marked with *(asterisk)
                        </p>

                        <div class="p-t-15">
                            <span class="stext-112 cl8">
                                First Name
                            </span>
                            <div class="bor8 bg0 m-b-12">
                                @Html.TextBoxFor(m => m.CustomerModel.FirstName, "First Name",
new
{
@class = "stext-111 cl8 plh3 size-111 p-lr-15",
@style = "width: 100%",
@type = "text",
@name = "firstname",
@id = "firstname",
@placeholder = "First Name",
@required = "",
ng_model = "sa.firstname",
ng_pattern = "/^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/"
})

                            </div>
                            <span class="error" ng-show="addToCart.CustomerModel.FirstName.$error.required">First Name is Required!</span>
                        </div>

                        <div class="p-t-15">
                            <span class="stext-112 cl8">
                                Last Name
                            </span>
                            <div class="bor8 bg0 m-b-12">
                                @Html.TextBoxFor(m => m.CustomerModel.LastName, "Last Name",
new
{
@class = "stext-111 cl8 plh3 size-111 p-lr-15",
@style = "width: 100%",
@type = "text",
@name = "lastname",
@id = "lastname",
@placeholder = "Last Name",
@required = "",
ng_model = "sa.lastname",
ng_pattern = "/^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/"
})
                            </div>
                            <span class="error" ng-show="addToCart.CustomerModel.LastName.$error.required">Last Name is Required!</span>
                        </div>

                        <div class="p-t-15">
                            <span class="stext-112 cl8">
                                Email Address
                            </span>
                            <div class="bor8 bg0 m-b-12">
                                @Html.TextBoxFor(m => m.CustomerModel.EmailAddress, "Email Address",
new
{
@class = "stext-111 cl8 plh3 size-111 p-lr-15",
@style = "width: 100%",
@type = "text",
@name = "emailaddress",
@id = "emailaddress",
@placeholder = "Email Address",
@required = "",
ng_model = "sa.emailaddress",
ng_pattern = "/^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/"
})
                            </div>
                            <span class="error" ng-show="addToCart.CustomerModel.EmailAddress.$error.required">Email Address is Required!</span>
                        </div>

                        <div class="p-t-15">
                            <span class="stext-112 cl8">
                                Phone Number
                            </span>
                            <div class="bor8 bg0 m-b-12">
                                @Html.TextBoxFor(m => m.CustomerModel.PhoneNumber, "Phone Number",
new
{
@class = "stext-111 cl8 plh3 size-111 p-lr-15",
@style = "width: 100%",
@type = "text",
@name = "phonenumber",
@id = "phonenumber",
@placeholder = "Phone Number",
@required = "",
ng_model = "sa.phonenumber",
ng_pattern = "/^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/"
})
                            </div>
                            <span class="error" ng-show="addToCart.CustomerModel.PhoneNumber.$error.required">Phone Number is Required!</span>
                        </div>


                    </div>
                </div>



                <div class="flex-w flex-t bor12 p-t-15 p-b-30">
                    <div class="size-208 w-full-ssm">
                        <span class="stext-110 cl2">
                            Billing Address Details:
                        </span>
                    </div>

                    <div class="size-209 p-r-18 p-r-0-sm w-full-ssm">
                        <p class="stext-111 cl6 p-t-2">
                            Please enter all the fields marked with *(asterisk)
                        </p>

                        <div class="p-t-15">
                            <span class="stext-112 cl8">
                                Billing Address
                            </span>



                            <div class="bor8 bg0 m-b-12">
                                @Html.TextBoxFor(m => m.CustomerModel.Address.AddressLine1_Billing, "Address Line 1",
new
{
@class = "stext-111 cl8 plh3 size-111 p-lr-15",
@style = "width: 100%",
@type = "text",
@name = "addressLine1",
@id = "addressLine1",
@placeholder = "Address Line 1",
@required = "",
ng_model = "sa.addressline1",
ng_pattern = "/^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/",
ng_change = "sameAddress && update()"
})
                            </div>
                            <span class="error" ng-show="addToCart.CustomerModel.Address.AddressLine1_Billing.$error.required">Email Address is Required!</span>

                            <div class="bor8 bg0 m-b-12">
                                @Html.TextBoxFor(m => m.CustomerModel.Address.AddressLine2_Billing, "Address Line 2",
new
{
@class = "stext-111 cl8 plh3 size-111 p-lr-15",
@style = "width: 100%",
@type = "text",
@name = "addressLine2",
@id = "addressLine2",
@placeholder = "Address Line 2",
@required = "",
ng_model = "sa.addressline2",
ng_pattern = "/^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/",
ng_change = "sameAddress && update()"
})
                            </div>
                            <span class="error" ng-show="addToCart.CustomerModel.Address.AddressLine2_Billing.$error.required">Email Address is Required!</span>

                            <div class="bor8 bg0 m-b-12">
                                @Html.TextBoxFor(m => m.CustomerModel.Address.City_Billing, "City",
new
{
@class = "stext-111 cl8 plh3 size-111 p-lr-15",
@style = "width: 100%",
@type = "text",
@name = "city",
@id = "city",
@placeholder = "City",
@required = "",
ng_model = "sa.city",
ng_pattern = "/^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/",
ng_change = "sameAddress && update()"
})
                            </div>
                            <span class="error" ng-show="addToCart.CustomerModel.Address.City_Billing.$error.required">Email Address is Required!</span>

                            <div class="bor8 bg0 m-b-12">
                                @Html.TextBoxFor(m => m.CustomerModel.Address.State_Billing, "State",
new
{
@class = "stext-111 cl8 plh3 size-111 p-lr-15",
@style = "width: 100%",
@type = "text",
@name = "state",
@id = "state",
@placeholder = "State",
@required = "",
ng_model = "sa.state",
ng_pattern = "/^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/",
ng_change = "sameAddress && update()"
})
                            </div>
                            <span class="error" ng-show="addToCart.CustomerModel.Address.State_Billing.$error.required">Email Address is Required!</span>

                            <div class="bor8 bg0 m-b-22">
                                @Html.TextBoxFor(m => m.CustomerModel.Address.ZipCode_Billing, "Zipcode",
new
{
@class = "stext-111 cl8 plh3 size-111 p-lr-15",
@style = "width: 100%",
@type = "text",
@name = "zipcode",
@id = "zipcode",
@placeholder = "Zipcode",
@required = "",
ng_model = "sa.zipcode",
ng_pattern = "/^\\d{5}(?:[-\\s]\\d{4})?$/",
ng_change = "sameAddress && update()"
})
                            </div>
                            <span class="error" ng-show="addToCart.CustomerModel.Address.ZipCode_Billing.$error.required">Email Address is Required!</span>

                            <div class="rs1-select2 rs2-select2 bor8 bg0 m-b-12 m-t-9">
                                @Html.DropDownListFor(m => m.CustomerModel.Address.Country_Billing,
new List<SelectListItem>
{
new SelectListItem{ Text="USA", Value = "USA" },
new SelectListItem{ Text="UK", Value = "UK" },
new SelectListItem{ Text="Europe", Value = "Europe" },
new SelectListItem{ Text="Australia", Value = "Australia" }
},
new
{
@class = "js-select2",
@name = "time"
})
                                @*<select class="js-select2" name="time">
                            <option>Select a country...</option>
                            <option>USA</option>
                            <option>UK</option>
                        </select>*@
                                <div class="dropDownSelect2"></div>
                            </div>

                            <div class="bg0 m-b-12">
                                @Html.CheckBoxFor(m => m.CustomerModel.Address.IsSameAsBilling,
new { ng_model = "sameAddress", ng_change = "sameAddress && update()" })
                                <span class="stext-112 cl8">
                                    Shipping Address is same as Billing Address
                                </span>
                            </div>
                        </div>
                    </div>

                </div>

                <div class="flex-w flex-t bor12 p-t-15 p-b-30">
                    <div class="size-208 w-full-ssm">
                        <span class="stext-110 cl2">
                            Shipping Address Details:
                        </span>
                    </div>

                    <div class="size-209 p-r-18 p-r-0-sm w-full-ssm">
                        <p class="stext-111 cl6 p-t-2">
                            Please enter all the fields marked with *(asterisk)
                        </p>

                        <div class="p-t-15">
                            <span class="stext-112 cl8">
                                Shipping Address
                            </span>



                            <div class="bor8 bg0 m-b-12">
                                @Html.TextBoxFor(m => m.CustomerModel.Address.AddressLine1_Shipping, "Address Line 1",
new
{
@class = "stext-111 cl8 plh3 size-111 p-lr-15",
@style = "width: 100%",
@type = "text",
@name = "addressLine1",
@id = "addressLine1",
@placeholder = "Address Line 1",
ng_model = "ba.addressline1",
ng_disabled = "sameAddress",
@required = "",
ng_pattern = "/^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/"
})
                            </div>
                            <span class="error" ng-show="addToCart.CustomerModel.Address.AddressLine1_Shipping.$error.required">Address Line1 is Required!</span>


                            <div class="bor8 bg0 m-b-12">
                                @Html.TextBoxFor(m => m.CustomerModel.Address.AddressLine2_Shipping, "Address Line 2",
new
{
@class = "stext-111 cl8 plh3 size-111 p-lr-15",
@style = "width: 100%",
@type = "text",
@name = "addressLine2",
@id = "addressLine2",
@placeholder = "Address Line 2",
ng_model = "ba.addressline2",
ng_disabled = "sameAddress",
@required = "",
ng_pattern = "/^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/"
})
                            </div>
                            <span class="error" ng-show="addToCart.CustomerModel.Address.AddressLine2_Shipping.$error.required">Address Line 2 is Required!</span>

                            <div class="bor8 bg0 m-b-12">
                                @Html.TextBoxFor(m => m.CustomerModel.Address.City_Shipping, "City",
new
{
@class = "stext-111 cl8 plh3 size-111 p-lr-15",
@style = "width: 100%",
@type = "text",
@name = "city",
@id = "city",
@placeholder = "City",
ng_model = "ba.city",
ng_disabled = "sameAddress",
@required = "",
ng_pattern = "/^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/"
})
                            </div>
                            <span class="error" ng-show="addToCart.CustomerModel.Address.City_Shipping.$error.required">City is Required!</span>

                            <div class="bor8 bg0 m-b-12">
                                @Html.TextBoxFor(m => m.CustomerModel.Address.State_Shipping, "State",
new
{
@class = "stext-111 cl8 plh3 size-111 p-lr-15",
@style = "width: 100%",
@type = "text",
@name = "state",
@id = "state",
@placeholder = "State",
ng_model = "ba.state",
ng_disabled = "sameAddress",
@required = "",
ng_pattern = "/^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/"
})
                            </div>
                            <span class="error" ng-show="addToCart.CustomerModel.Address.State_Shipping.$error.required">State is Required!</span>

                            <div class="bor8 bg0 m-b-22">
                                @Html.TextBoxFor(m => m.CustomerModel.Address.ZipCode_Shipping, "Zipcode",
new
{
@class = "stext-111 cl8 plh3 size-111 p-lr-15",
@style = "width: 100%",
@type = "text",
@name = "zipcode",
@id = "zipcode",
@placeholder = "Zipcode",
ng_model = "ba.zipcode",
ng_disabled = "sameAddress",
@required = "",
ng_pattern = "/^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/"
})
                            </div>
                            <span class="error" ng-show="addToCart.CustomerModel.Address.ZipCode_Shipping.$error.required">Zipcode is Required!</span>

                            <div class="rs1-select2 rs2-select2 bor8 bg0 m-b-12 m-t-9">
                                @Html.DropDownListFor(m => m.CustomerModel.Address.Country_Shipping,
new List<SelectListItem>
{
new SelectListItem{ Text="USA", Value = "USA" },
new SelectListItem{ Text="UK", Value = "UK" },
new SelectListItem{ Text="Europe", Value = "Europe" },
new SelectListItem{ Text="Australia", Value = "Australia" }
},
new
{
@class = "js-select2",
@name = "time"
})

                                <div class="dropDownSelect2"></div>
                            </div>

                        </div>
                    </div>

                </div>
               <br />
           

                <button class="col-sm-4 col-sm-offset-3 stext-101 cl0 size-101 bg3 bor14 hov-btn3 p-lr-15 trans-04 pointer">
                    Proceed to Checkout
                </button>

            </div>
        </div>
    </div>
</div>
}

<script>
    var myApp = angular.module('ngApp', []);

    myApp.controller('ValidationController', function ($scope) {

        $scope.sa = {};
        $scope.ba = {};

        $scope.update = function (sa) {
            $scope.ba = angular.copy($scope.sa);
        };

        
    });
</script>
